<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="124">
  <server artifactsdir="artifacts" agentAutoRegisterKey="323040d4-f2e4-4b8a-8394-7a2d122054d1" webhookSecret="3d5cd2f5-7fe7-43c0-ba34-7e01678ba8b6" commandRepositoryLocation="default" serverId="60f5f682-5248-4ba9-bb35-72c92841bd75" tokenGenerationKey="8c3c8dc9-08bf-4cd7-ac80-cecb3e7ae86c">
    <security>
      <authConfigs>
        <authConfig id="9cad79b0-4d9e-4a62-829c-eb4d9488062f" pluginId="cd.go.authentication.passwordfile">
          <property>
            <key>PasswordFilePath</key>
            <value>config/password.properties</value>
          </property>
        </authConfig>
      </authConfigs>
      <roles>
        <role name="xyz" />
      </roles>
      <admins>
        <user>jez</user>
        <user>admin</user>
      </admins>
    </security>
    <backup emailOnSuccess="true" emailOnFailure="true" />
  </server>
  <elastic jobStarvationTimeout="1">
    <agentProfiles>
      <agentProfile id="demo" clusterProfileId="docker">
        <property>
          <key>Hosts</key>
          <value />
        </property>
        <property>
          <key>Mounts</key>
          <value />
        </property>
        <property>
          <key>Command</key>
          <value />
        </property>
        <property>
          <key>Privileged</key>
          <value />
        </property>
        <property>
          <key>ReservedMemory</key>
          <value />
        </property>
        <property>
          <key>Environment</key>
          <value />
        </property>
        <property>
          <key>Cpus</key>
          <value />
        </property>
        <property>
          <key>Image</key>
          <value>gocd/gocd-agent-alpine-3.9:v19.5.0</value>
        </property>
        <property>
          <key>MaxMemory</key>
          <value />
        </property>
      </agentProfile>
    </agentProfiles>
    <clusterProfiles>
      <clusterProfile id="docker" pluginId="cd.go.contrib.elastic-agent.docker">
        <property>
          <key>go_server_url</key>
          <value>https://10.131.20.149:8154/go</value>
        </property>
        <property>
          <key>environment_variables</key>
          <value />
        </property>
        <property>
          <key>max_docker_containers</key>
          <value>5</value>
        </property>
        <property>
          <key>docker_uri</key>
          <value>unix:///var/run/docker.sock</value>
        </property>
        <property>
          <key>auto_register_timeout</key>
          <value>5</value>
        </property>
        <property>
          <key>docker_ca_cert</key>
          <value />
        </property>
        <property>
          <key>docker_client_cert</key>
          <value />
        </property>
        <property>
          <key>docker_client_key</key>
          <value />
        </property>
        <property>
          <key>private_registry_server</key>
          <value />
        </property>
        <property>
          <key>private_registry_username</key>
          <value />
        </property>
        <property>
          <key>private_registry_password</key>
        </property>
        <property>
          <key>enable_private_registry_authentication</key>
          <value>false</value>
        </property>
        <property>
          <key>private_registry_custom_credentials</key>
          <value>true</value>
        </property>
        <property>
          <key>pull_on_container_create</key>
          <value>false</value>
        </property>
      </clusterProfile>
    </clusterProfiles>
  </elastic>
  <pipelines group="first">
    <authorization>
      <view>
        <user>operate</user>
      </view>
      <admins>
        <user>operate</user>
      </admins>
    </authorization>
    <pipeline name="up42">
      <materials>
        <git url="https://github.com/bdpiparva/sample_repo" />
      </materials>
      <stage name="up42_stage">
        <jobs>
          <job name="up42_job" elasticProfileId="demo">
            <tasks>
              <exec command="ls" />
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
</cruise>
